{"version":3,"sources":["redux/slices/imagesSlice.ts","redux/slices/bookmarksSlice.ts","redux/slices/index.ts","api/getImagesBySearchQuery.ts","redux/sagas/getImages.ts","redux/sagas/index.ts","redux/store.ts","redux/hooks.ts","components/Header/index.tsx","components/Image/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/Card/index.tsx","components/Controllers/index.tsx","hooks/useDebounce.ts","components/SearchSection/index.tsx","constants/flickr.ts","constants/maxImagesPerPage.ts","components/Footer/index.tsx","pages/MainPage.tsx","components/BookmarksSection/index.tsx","pages/Bookmarks.tsx","routing/AppRouter.tsx","App.tsx","index.tsx"],"names":["imagesSlice","createSlice","name","initialState","data","pages","isLoading","error","reducers","fetchRequested","state","action","fetchSucceeded","payload","photos","picArray","photo","map","pic","id","title","src","farm","server","secret","fetchRejected","clearData","actions","bookmarksSlice","addToBookmarks","push","removeFromBookmarks","currentBookmark","findIndex","el","item","splice","rootReducer","combineReducers","images","bookmarks","getImagesBySearchQuery","url","a","axios","get","response","console","getImages","getImagesSaga","call","put","takeEvery","rootSaga","all","fork","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","persistConfig","key","storage","whitelist","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","run","useAppDispatch","useDispatch","useAppSelector","useSelector","Header","className","to","href","Image","alt","Button","text","disabled","children","onClick","Input","value","type","placeholder","onChange","Card","isBookmark","tags","dispatch","useState","setValue","isAddedToBookmarks","includes","handleAddToMookmarks","useCallback","handleRemoveFromBookmarks","event","target","Controllers","page","setPage","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","SearchSection","query","setQuery","setResults","params","length","Footer","MainPage","location","useLocation","search","code","slice","post","client_id","redirect_uri","client_secret","grant_type","BookmarksSection","bookmark","Bookmarks","AppRouter","exact","path","component","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.21ed5154.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { IResponse } from '../../interfaces/IResponse';\n\ninterface IPic {\n  farm: number;\n  id: string;\n  owner: string;\n  secret: string;\n  server: string;\n  title: string;\n}\n\nconst initialState: IResponse = {\n  data: [],\n  pages: null,\n  isLoading: false,\n  error: null,\n};\n\nconst imagesSlice = createSlice({\n  name: 'images',\n  initialState,\n  reducers: {\n    fetchRequested(state, action) {\n      state.data = [];\n      state.isLoading = true;\n    },\n\n    fetchSucceeded(state, action) {\n      const { pages, photo } = action.payload.photos;\n\n      const picArray = photo.map((pic: IPic) => {\n        const id = pic.id;\n        const title = pic.title;\n        const src = `https://farm${pic.farm}.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}.jpg`;\n\n        return {\n          id,\n          title,\n          src,\n        };\n      });\n\n      state.data = picArray;\n      state.pages = pages;\n      state.isLoading = false;\n    },\n\n    fetchRejected(state, action) {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n\n    clearData(state) {\n      state.data = [];\n    },\n  },\n});\n\nexport const { fetchRequested, fetchSucceeded, fetchRejected, clearData } =\n  imagesSlice.actions;\nexport default imagesSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { IBookmark } from '../../interfaces/IBookmark';\n\ninterface IBookmarksSliceState {\n  data: Array<IBookmark>;\n}\n\nconst initialState: IBookmarksSliceState = {\n  data: [],\n};\n\nconst bookmarksSlice = createSlice({\n  name: 'bookmarks',\n  initialState,\n  reducers: {\n    addToBookmarks(state, action: PayloadAction<IBookmark>) {\n      state.data.push(action.payload);\n    },\n\n    removeFromBookmarks(state, action: PayloadAction<string>) {\n      const currentBookmark = state.data.findIndex(\n        (el: IBookmark) => el.item.id === action.payload\n      );\n\n      state.data.splice(currentBookmark, 1);\n    },\n  },\n});\n\nexport const { addToBookmarks, removeFromBookmarks } = bookmarksSlice.actions;\nexport default bookmarksSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport images from './imagesSlice';\nimport bookmarks from './bookmarksSlice';\n\nconst rootReducer = combineReducers({\n  images,\n  bookmarks,\n});\n\nexport default rootReducer;\n","// axios\nimport axios from 'axios';\n\n// interfaces\nimport { IResponse } from '../interfaces/IResponse';\n\nconst getImagesBySearchQuery = async (url: string) => {\n  try {\n    const response: IResponse = await axios.get(url);\n\n    return response;\n  } catch (e: any) {\n    console.error(e);\n  }\n};\n\nexport default getImagesBySearchQuery;\n","// saga\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\n// redux\nimport {\n  fetchRejected,\n  fetchRequested,\n  fetchSucceeded,\n} from '../slices/imagesSlice';\n\n// api\nimport getImagesBySearchQuery from '../../api/getImagesBySearchQuery';\n\n// interfaces\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { IResponse } from '../../interfaces/IResponse';\n\nfunction* getImages(action: PayloadAction<string>) {\n  try {\n    const response: IResponse = yield call(\n      getImagesBySearchQuery,\n      action.payload\n    );\n\n    yield put(fetchSucceeded(response.data));\n  } catch (error) {\n    yield put(fetchRejected(error));\n  }\n}\n\nfunction* getImagesSaga() {\n  yield takeEvery(fetchRequested, getImages);\n}\n\nexport default getImagesSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport getImages from './getImages';\n\nexport default function* rootSaga() {\n  yield all([fork(getImages)]);\n}\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './slices';\nimport rootSaga from './sagas/index';\n\nconst middleware = getDefaultMiddleware({\n  immutableCheck: true,\n  serializableCheck: false,\n  thunk: false,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['bookmarks'],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nmiddleware.push(sagaMiddleware);\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: {\n    persistedReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// react\nimport axios from 'axios';\nimport React from 'react';\n\n// router\nimport { Link } from 'react-router-dom';\n\n// components\nimport Button from '../Button';\n\n// styles\nimport './Header.styles.scss';\n\nconst Header: React.FC = () => {\n  // const handleLogin = () => {\n  //   axios.get()\n  // }\n\n  return (\n    <header className='header'>\n      <div className='container'>\n        <div className='row'>\n          <Link className='header__title' to='/'>\n            Image Finder\n          </Link>\n          <a\n            className='header__button'\n            href='https://api.raindrop.io/v1/oauth/authorize?client_id=60ec694880f11a82952b1cb4&redirect_uri=http%3A%2F%2Flocalhost%3A3000'\n          >\n            <i className='fas fa-user-circle'></i>\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// react\nimport React from 'react';\ninterface IImageProps {\n  src: string;\n  alt: string;\n}\n\nconst Image: React.FC<IImageProps> = ({ src, alt }) => {\n  return (\n    <div className='card__image-wrapper'>\n      <img src={src} alt={alt} />\n    </div>\n  );\n};\n\nexport default Image;\n","// react\nimport React from 'react';\n\ninterface ButtonProps {\n  className?: string;\n  text?: string;\n  disabled?: boolean;\n  children?: any;\n  onClick?: () => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  className,\n  text,\n  disabled,\n  children,\n  onClick,\n}) => (\n  <button className={className} disabled={disabled} onClick={onClick}>\n    {text}\n    {children}\n  </button>\n);\n\nexport default Button;\n","// react\nimport React from 'react';\n\ninterface IInputProps {\n  className?: string;\n  value: string;\n  type: string;\n  id?: string;\n  name: string;\n  placeholder?: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Input: React.FC<IInputProps> = ({\n  className,\n  value,\n  type,\n  id,\n  name,\n  placeholder,\n  onChange,\n}) => {\n  return (\n    <input\n      className={className}\n      value={value}\n      type={type}\n      id={id}\n      name={name}\n      placeholder={placeholder}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Input;\n","// react\nimport React, { useCallback, useState } from 'react';\n\n// redux\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport {\n  addToBookmarks,\n  removeFromBookmarks,\n} from '../../redux/slices/bookmarksSlice';\n\n// components\nimport Image from '../Image';\nimport Button from '../Button';\nimport Input from '../Input';\n\n// styles\nimport './Card.styles.scss';\n\ninterface ICardProps {\n  isBookmark?: boolean;\n  src: string;\n  alt: string;\n  title: string;\n  id: string;\n  tags?: string;\n}\n\nconst Card: React.FC<ICardProps> = ({\n  isBookmark,\n  src,\n  alt,\n  title,\n  id,\n  tags,\n}) => {\n  const dispatch = useAppDispatch();\n  const [value, setValue] = useState<string>('');\n  const bookmarks = useAppSelector(\n    (state) => state.persistedReducer.bookmarks.data\n  );\n\n  const isAddedToBookmarks = bookmarks.map((el) => el.item.id).includes(id);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleAddToMookmarks = useCallback(() => {\n    dispatch(\n      addToBookmarks({\n        item: {\n          id,\n          src,\n          title,\n        },\n        tags: value,\n      })\n    );\n  }, [dispatch, id, src, title, value]);\n\n  const handleRemoveFromBookmarks = useCallback(() => {\n    dispatch(removeFromBookmarks(id));\n  }, [dispatch, id]);\n\n  return (\n    <div className='card'>\n      <div className='card__wrapper'>\n        <Image src={src} alt={alt} />\n        <p className='card__title'>{title}</p>\n        {isBookmark ? (\n          <p className='card__tag'>Tags: {tags || 'No tags provided'}</p>\n        ) : (\n          !isAddedToBookmarks && (\n            <div className='card__input-wrapper'>\n              <Input\n                className='card__input'\n                value={value}\n                type='text'\n                name='tags'\n                placeholder='Any tags?'\n                onChange={handleChangeInput}\n              />\n            </div>\n          )\n        )}\n        <Button\n          className='card__button button'\n          text={isAddedToBookmarks ? 'Remove from bookmarks' : 'Bookmark it!'}\n          onClick={\n            isAddedToBookmarks\n              ? handleRemoveFromBookmarks\n              : handleAddToMookmarks\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// react\nimport React from 'react';\n\n// redux\nimport { useAppSelector } from '../../redux/hooks';\n\n// components\nimport Button from '../Button';\n\n// styles\nimport './Controllers.styles.scss';\n\ninterface IControllerProps {\n  page: number;\n  setPage: (state: any) => any;\n}\n\nconst Controllers: React.FC<IControllerProps> = ({ page, setPage }) => {\n  const pages = useAppSelector((state) => state.persistedReducer.images?.pages);\n\n  const handleDecrease = () => {\n    setPage((state: any) => state - 1);\n  };\n\n  const handleIncrease = () => {\n    setPage((state: any) => state + 1);\n  };\n\n  return (\n    <div className='controllers'>\n      <div className='row'>\n        <Button\n          className={page === 1 ? 'button button--disabled' : 'button'}\n          text='PREV'\n          disabled={page === 1}\n          onClick={handleDecrease}\n        />\n        <span className='controllers__currentpage'>\n          Current page: {page} of {pages}\n        </span>\n        <Button\n          className={page === pages ? 'button button--disabled' : 'button'}\n          text='NEXT'\n          disabled={page === pages}\n          onClick={handleIncrease}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Controllers;\n","// react\nimport { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","// react\nimport React, { useCallback, useEffect, useState } from 'react';\n\n// redux\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { clearData, fetchRequested } from '../../redux/slices/imagesSlice';\n\n// components\nimport Card from '../Card';\nimport Input from '../Input';\nimport Controllers from '../Controllers';\n\n// constants\nimport { FLICKR_KEY, FLICKR_BASE_API } from '../../constants/flickr';\nimport { MAX_IMAGES_PER_IMAGE } from '../../constants/maxImagesPerPage';\n\n// custom hooks\nimport useDebounce from '../../hooks/useDebounce';\n\n// interfaces\nimport { IItem } from '../../interfaces/IItem';\n\n// styles\nimport './SearchSection.styles.scss';\n\nconst SearchSection: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.persistedReducer.images?.data);\n  const [query, setQuery] = useState<string>('');\n  const [page, setPage] = useState<number>(1);\n  const debouncedValue = useDebounce<string>(query, 1500);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const setResults = useCallback((): void => {\n    const params: string = `api_key=${FLICKR_KEY}&tags=${debouncedValue}&format=json&nojsoncallback=1&page=${page}&per_page=${MAX_IMAGES_PER_IMAGE}`;\n\n    if (debouncedValue) {\n      dispatch(fetchRequested(`${FLICKR_BASE_API}&${params}`));\n    }\n  }, [debouncedValue, page, dispatch]);\n\n  useEffect(() => {\n    dispatch(clearData());\n\n    setResults();\n  }, [setResults, dispatch]);\n\n  return (\n    <section className='search'>\n      <div className='container'>\n        <div className='search__input-wrapper'>\n          <Input\n            className='search__input'\n            value={query}\n            type='text'\n            id='search'\n            name='search'\n            placeholder='Enter your search query'\n            onChange={handleChangeInput}\n          />\n        </div>\n        {data.length !== 0 && (\n          <>\n            <Controllers page={page} setPage={setPage} />\n            <div className='row'>\n              {data.map((item: IItem) => {\n                return (\n                  <Card\n                    key={item.id}\n                    title={item.title || 'No title provided'}\n                    src={item.src}\n                    alt={item.title}\n                    id={item.id}\n                  />\n                );\n              })}\n            </div>\n            <Controllers page={page} setPage={setPage} />\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default SearchSection;\n","export const FLICKR_KEY: string = 'd6769d1fec1119a87ed5ec3a2cc6d690';\nexport const FLICKR_BASE_API: string =\n  'https://www.flickr.com/services/rest/?method=flickr.photos.search';\n","export const MAX_IMAGES_PER_IMAGE: number = 10;\n","// react\nimport React from 'react';\n\n// router\nimport { Link } from 'react-router-dom';\n\n// components\nimport Button from '../Button';\n\n// styles\nimport './Footer.styles.scss';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className='footer'>\n      <div className='container'>\n        <div className='footer__menu row'>\n          <Link className='footer__menu-item' to='/'>\n            <Button>\n              <i className='fas fa-cloud'></i>\n            </Button>\n          </Link>\n          <Link className='footer__menu-item' to='/bookmarks'>\n            <Button>\n              <i className='fas fa-bookmark'></i>\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// react\nimport React, { useEffect } from 'react';\n\n// axios\nimport axios from 'axios';\n\n// router\nimport { useLocation } from 'react-router-dom';\n\n// redux\nimport { useAppDispatch } from '../redux/hooks';\n\n// components\nimport Header from '../components/Header';\nimport SearchSection from '../components/SearchSection';\nimport Footer from '../components/Footer';\n\nconst MainPage: React.FC = () => {\n  const location: any = useLocation();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (location.search) {\n      const code = location.search.slice(6);\n\n      axios.post('https://raindrop.io/oauth/access_token', {\n        code,\n        client_id: '60ec694880f11a82952b1cb4',\n        redirect_uri: 'http://localhost:3000/',\n        client_secret: '963d4d0a-4e97-4f41-9624-198698353c6b',\n        grant_type: 'authorization_code',\n      });\n    }\n  }, [location.search]);\n\n  return (\n    <>\n      <Header />\n      <SearchSection />\n      <Footer />\n    </>\n  );\n};\n\nexport default MainPage;\n","// react\nimport React from 'react';\n\n// redux\nimport { useAppSelector } from '../../redux/hooks';\n\n// components\nimport Card from '../Card';\n\n// interfaces\nimport { IBookmark } from '../../interfaces/IBookmark';\n\n// styles\nimport './BookmarksSection.styles.scss';\n\nconst BookmarksSection: React.FC = () => {\n  const bookmarks = useAppSelector(\n    (state) => state.persistedReducer.bookmarks.data\n  );\n\n  return (\n    <section className='bookmarks'>\n      <div className='container'>\n        <h2 className='bookmarks__title'>Bookmarks</h2>\n        <div className='row'>\n          {bookmarks.length !== 0 ? (\n            bookmarks.map((bookmark: IBookmark) => (\n              <Card\n                key={bookmark.item.id}\n                isBookmark\n                src={bookmark.item.src}\n                alt={bookmark.item.title}\n                title={bookmark.item.title}\n                id={bookmark.item.id}\n                tags={bookmark.tags}\n              />\n            ))\n          ) : (\n            <p>There is no bookmarks yet.</p>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BookmarksSection;\n","// react\nimport React from 'react';\n\n// components\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport BookmarksSection from '../components/BookmarksSection';\n\nconst Bookmarks: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <BookmarksSection />\n      <Footer />\n    </>\n  );\n};\n\nexport default Bookmarks;\n","// react\nimport React from 'react';\n\n// router\nimport { Switch, Route } from 'react-router-dom';\n\n// pages\nimport MainPage from '../pages/MainPage';\nimport Bookmarks from '../pages/Bookmarks';\n\nconst AppRouter: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={MainPage} />\n      <Route path='/bookmarks' component={Bookmarks} />\n      <Route path='/signin' component={MainPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\n\nimport AppRouter from './routing/AppRouter';\n\nconst App: React.FC = () => {\n  return <AppRouter />;\n};\n\nexport default App;\n","// react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// router\nimport { BrowserRouter } from 'react-router-dom';\n\n// redux\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\n// components\nimport App from './App';\n\n// styles\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}