{"version":3,"sources":["redux/slices/searchImagesSlice.ts","redux/slices/bookmarksSlice.ts","api/http.ts","redux/sagas/searchImagesSaga.ts","redux/sagas/rootSaga.ts","redux/store.ts","components/Logo/index.tsx","modules/Header/index.tsx","components/Title/index.tsx","components/Input/index.tsx","components/Button/index.tsx","redux/hooks.ts","components/Card/index.tsx","components/Pagination/index.tsx","hooks/useDebounce.ts","modules/SearchSection/index.tsx","api/flickrApi.ts","constants/maxImagesPerPage.ts","modules/Footer/index.tsx","pages/MainPage/index.tsx","modules/BookmarksSection/index.tsx","pages/BookmarksPage/index.tsx","api/getBaseApi.ts","api/raindropApi.ts","modules/SignInSection/index.tsx","pages/SignInPage/index.tsx","routing/AppRouter.tsx","App.tsx","index.tsx"],"names":["searchImagesSlice","createSlice","name","initialState","data","pages","isLoading","error","reducers","fetchRequested","state","action","fetchSucceeded","payload","photos","photo","picArray","map","pic","id","title","imgUrl","farm","server","secret","fetchFailed","actions","bookmarksSlice","addToBookmarks","push","removeFromBookmarks","currentBookmark","findIndex","el","splice","http","options","a","axios","response","searchImages","searchImagesSaga","call","put","takeEvery","rootSaga","all","fork","persistConfig","key","storage","bookmarks","persistReducer","bookmarksReducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","devTools","process","persistor","persistStore","run","Logo","className","to","Header","Title","text","Input","type","placeholder","value","onChange","Button","disabled","onClick","children","useAppDispatch","useDispatch","useAppSelector","useSelector","Card","src","alt","tags","dispatch","isAddedToBookmarks","includes","useState","setValue","event","target","Pagination","page","setPage","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","SearchSection","images","query","setQuery","debouncedQuery","memoizedSearch","useCallback","params","method","url","length","img","Footer","MainPage","BookmarksSection","bookmark","BookmarksPage","getBaseApi","isEncoded","CLIENT_ID","RAINDROP_BASE_API","SignInSection","location","useLocation","search","code","slice","client_id","redirect_uri","client_secret","grant_type","headers","href","SignInPage","AppRouter","exact","path","component","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5b0a3bd3.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// interfaces\nimport IResponse from '../../interfaces/IResponse';\nimport { IPic } from '../../interfaces/IResponse';\nimport IImage from '../../interfaces/IImage';\nimport IApiOptions from '../../interfaces/IApiOptions';\n\ninterface ISearchImagesSliceState {\n  data: Array<IImage>;\n  pages: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: ISearchImagesSliceState = {\n  data: [],\n  pages: null,\n  isLoading: false,\n  error: null,\n};\n\nconst searchImagesSlice = createSlice({\n  name: 'searchImages',\n  initialState,\n  reducers: {\n    fetchRequested(state, action: PayloadAction<IApiOptions>) {\n      state.isLoading = true;\n      state.data = [];\n      state.error = null;\n    },\n\n    fetchSucceeded(state, action: PayloadAction<IResponse>) {\n      const {\n        photos: { photo, pages },\n      } = action.payload;\n\n      const picArray = photo.map((pic: IPic): IImage => {\n        const id = pic.id;\n        const title = pic.title;\n        const imgUrl = `https://farm${pic.farm}.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}.jpg`;\n\n        return {\n          id,\n          title,\n          imgUrl,\n        };\n      });\n\n      state.data = picArray;\n      state.pages = pages;\n      state.isLoading = false;\n    },\n\n    fetchFailed(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n      state.isLoading = false;\n      state.data = [];\n    },\n  },\n});\n\nexport const { fetchRequested, fetchSucceeded, fetchFailed } =\n  searchImagesSlice.actions;\nexport default searchImagesSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// interfaces\nimport IBookmark from '../../interfaces/IBookmark';\n\ninterface IBookmarksSliceState {\n  data: Array<IBookmark>;\n}\n\nconst initialState: IBookmarksSliceState = {\n  data: [],\n};\n\nconst bookmarksSlice = createSlice({\n  name: 'bookmarks',\n  initialState,\n  reducers: {\n    addToBookmarks(state, action: PayloadAction<IBookmark>) {\n      state.data.push(action.payload);\n    },\n\n    removeFromBookmarks(state, action: PayloadAction<string>) {\n      const currentBookmark = state.data.findIndex(\n        (el: IBookmark) => el.id === action.payload\n      );\n\n      state.data.splice(currentBookmark, 1);\n    },\n  },\n});\n\nexport const { addToBookmarks, removeFromBookmarks } = bookmarksSlice.actions;\nexport default bookmarksSlice.reducer;\n","import axios from 'axios';\n\nconst http = async (options: any) => {\n  const response = await axios(options);\n\n  return response;\n};\n\nexport default http;\n","// saga\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\n// actions\nimport {\n  fetchFailed,\n  fetchRequested,\n  fetchSucceeded,\n} from '../slices/searchImagesSlice';\n\n// api\nimport http from '../../api/http';\n\n// interfaces\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport IApiOptions from '../../interfaces/IApiOptions';\nimport { IResponseFromSaga } from '../../interfaces/IResponse';\n\nfunction* searchImages(action: PayloadAction<IApiOptions>) {\n  try {\n    const response: IResponseFromSaga = yield call(http, action.payload);\n\n    yield put(fetchSucceeded(response.data));\n  } catch (error) {\n    yield put(fetchFailed(error));\n  }\n}\n\nfunction* searchImagesSaga() {\n  yield takeEvery(fetchRequested, searchImages);\n}\n\nexport default searchImagesSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport searchImagesSaga from './searchImagesSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(searchImagesSaga)]);\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n// persist\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// reducers\nimport searchImages from './slices/searchImagesSlice';\nimport bookmarksReducer from './slices/bookmarksSlice';\n\n// saga\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootSaga from './sagas/rootSaga';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst bookmarks = persistReducer(persistConfig, bookmarksReducer);\n\nconst middleware = getDefaultMiddleware({\n  immutableCheck: true,\n  serializableCheck: false,\n  thunk: false,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nmiddleware.push(sagaMiddleware);\n\nexport const store = configureStore({\n  reducer: { searchImages, bookmarks },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './Logo.styles.scss';\n\nconst Logo: React.FC = (): React.ReactElement => {\n  return (\n    <Link className='logo' to='/'>\n      <h1>Image Finder</h1>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\n// components\nimport { Link } from 'react-router-dom';\nimport Logo from '../../components/Logo';\n\n// styles\nimport './Header.styles.scss';\n\nconst Header: React.FC = (): React.ReactElement => {\n  return (\n    <header className='header'>\n      <div className='container'>\n        <div className='row'>\n          <Logo />\n          <Link className='header__button' to='/signin'>\n            <i className='fas fa-user-circle' />\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './Title.styles.scss';\n\ninterface ITitleProps {\n  text: string;\n}\n\nconst Title: React.FC<ITitleProps> = ({ text }): React.ReactElement => {\n  return <h2 className='title'>{text}</h2>;\n};\n\nexport default Title;\n","import React from 'react';\n\ninterface IInputProps {\n  className?: string;\n  type: string;\n  name: string;\n  id: string;\n  placeholder?: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Input: React.FC<IInputProps> = ({\n  className,\n  type,\n  name,\n  id,\n  placeholder,\n  value,\n  onChange,\n}): React.ReactElement => {\n  return (\n    <input\n      className={className}\n      type={type}\n      name={name}\n      id={id}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\ninterface IButtonProps {\n  className?: string;\n  text?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\n\nconst Button: React.FC<IButtonProps> = ({\n  className,\n  text,\n  disabled,\n  onClick,\n  children,\n}): React.ReactElement => {\n  return (\n    <button\n      className={className}\n      type='button'\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {text}\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from 'react';\n\n// components\nimport Input from '../Input';\nimport Button from '../Button';\n\n// hooks\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\n\n// actions\nimport {\n  addToBookmarks,\n  removeFromBookmarks,\n} from '../../redux/slices/bookmarksSlice';\n\n// styles\nimport './Card.styles.scss';\n\ninterface ICardProps {\n  id: string;\n  src: string;\n  alt: string;\n  title: string;\n  tags?: string;\n}\n\nconst Card: React.FC<ICardProps> = ({\n  id,\n  src,\n  alt,\n  title,\n  tags,\n}): React.ReactElement => {\n  const dispatch = useAppDispatch();\n  const bookmarks = useAppSelector((state) => state.bookmarks.data);\n  const isAddedToBookmarks = bookmarks.map((el) => el.id).includes(id);\n  const [value, setValue] = useState('');\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleAddToBookmarks = () => {\n    dispatch(addToBookmarks({ title, id, imgUrl: src, tags: value }));\n  };\n\n  const handleRemoveFromBookmarks = () => {\n    dispatch(removeFromBookmarks(id));\n  };\n\n  return (\n    <div className='card'>\n      <div className='card__image'>\n        <img src={src} alt={alt} />\n      </div>\n      <p className='card__title'>{title}</p>\n      {!tags && (\n        <Input\n          className='card__input'\n          type='text'\n          name='tags'\n          id={id}\n          placeholder='Any tags?'\n          value={value}\n          onChange={handleChangeInput}\n        />\n      )}\n      {tags && <p className='card__tags'>Tags: {tags}</p>}\n      <Button\n        className='card__btn button'\n        text={isAddedToBookmarks ? 'Remove from bookmarks!' : 'Bookmark it!'}\n        onClick={\n          isAddedToBookmarks ? handleRemoveFromBookmarks : handleAddToBookmarks\n        }\n      />\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\n// components\nimport Button from '../Button';\n\n// hooks\nimport { useAppSelector } from '../../redux/hooks';\n\n// styles\nimport './Pagination.styles.scss';\n\ninterface IPaginationProps {\n  page: number;\n  setPage: (func: (state: number) => number) => void;\n}\n\nconst Pagination: React.FC<IPaginationProps> = ({\n  page,\n  setPage,\n}): React.ReactElement => {\n  const pages = useAppSelector((state) => state.searchImages.pages);\n\n  const handleDecrease = () => {\n    setPage((state) => state - 1);\n  };\n\n  const handleIncrease = () => {\n    setPage((state) => state + 1);\n  };\n\n  return (\n    <div className='pagination'>\n      <div className='row'>\n        <Button\n          className={page === 1 ? 'button button--disabled' : 'button'}\n          text='PREV'\n          disabled={page === 1}\n          onClick={handleDecrease}\n        />\n        <span className='pagination__span'>\n          Current page: {page} of {pages}\n        </span>\n        <Button\n          className={page === pages ? 'button button--disabled' : 'button'}\n          text='NEXT'\n          disabled={page === pages}\n          onClick={handleIncrease}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import React, { useCallback, useEffect, useState } from 'react';\n\n// components\nimport Title from '../../components/Title';\nimport Input from '../../components/Input';\nimport Card from '../../components/Card';\nimport Pagination from '../../components/Pagination';\n\n// hooks\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport useDebounce from '../../hooks/useDebounce';\n\n// actions\nimport { fetchRequested } from '../../redux/slices/searchImagesSlice';\n\n// api\nimport { FLICKR_BASE_API, FLICKR_KEY } from '../../api/flickrApi';\n\n// constants\nimport MAX_IMAGES_PER_PAGE from '../../constants/maxImagesPerPage';\n\n// interfaces\nimport IImage from '../../interfaces/IImage';\n\n// styles\nimport './SearchSection.styles.scss';\n\nconst SearchSection: React.FC = (): React.ReactElement => {\n  const dispatch = useAppDispatch();\n  const images = useAppSelector((state) => state.searchImages.data);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n\n  const debouncedQuery = useDebounce(query, 1500);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const memoizedSearch = useCallback(() => {\n    const params: string = `api_key=${FLICKR_KEY}&tags=${debouncedQuery}&format=json&nojsoncallback=1&page=${page}&per_page=${MAX_IMAGES_PER_PAGE}`;\n\n    dispatch(\n      fetchRequested({ method: 'post', url: `${FLICKR_BASE_API}&${params}` })\n    );\n  }, [dispatch, page, debouncedQuery]);\n\n  useEffect(() => {\n    memoizedSearch();\n  }, [memoizedSearch]);\n\n  return (\n    <section className='search-section'>\n      <main>\n        <div className='container'>\n          <Title text='What images are you looking for?' />\n          <div className='search-section__input-wrapper'>\n            <Input\n              className='search-section__input'\n              type='text'\n              name='search'\n              id='search'\n              placeholder='Enter your search query here'\n              value={query}\n              onChange={handleChangeInput}\n            />\n          </div>\n          {images.length !== 0 ? (\n            <>\n              <Pagination page={page} setPage={setPage} />\n              <div className='row'>\n                {images.map((img: IImage) => (\n                  <Card\n                    key={img.id}\n                    id={img.id}\n                    src={img.imgUrl}\n                    alt={img.title}\n                    title={img.title}\n                  />\n                ))}\n              </div>\n              <Pagination page={page} setPage={setPage} />\n            </>\n          ) : (\n            <p className='alert'>\n              No images here. Would you try to search for anything else?\n            </p>\n          )}\n        </div>\n      </main>\n    </section>\n  );\n};\n\nexport default SearchSection;\n","export const FLICKR_KEY: string = 'd6769d1fec1119a87ed5ec3a2cc6d690';\nexport const FLICKR_BASE_API: string =\n  'https://www.flickr.com/services/rest/?method=flickr.photos.search';\n","const MAX_IMAGES_PER_PAGE: number = 10;\n\nexport default MAX_IMAGES_PER_PAGE;\n","import React from 'react';\n\n// components\nimport { Link } from 'react-router-dom';\n\n// styles\nimport './Footer.styles.scss';\n\nconst Footer: React.FC = (): React.ReactElement => {\n  return (\n    <footer className='footer'>\n      <div className='container'>\n        <nav className='footer__nav'>\n          <ul className='footer__list row'>\n            <li className='footer__list-item'>\n              <Link to='/'>\n                <i className='fas fa-cloud' />\n              </Link>\n            </li>\n            <li className='footer__list-item'>\n              <Link to='/bookmarks'>\n                <i className='fas fa-bookmark' />\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\n// modules\nimport Header from '../../modules/Header';\nimport SearchSection from '../../modules/SearchSection';\nimport Footer from '../../modules/Footer';\n\nconst MainPage: React.FC = (): React.ReactElement => {\n  return (\n    <>\n      <Header />\n      <SearchSection />\n      <Footer />\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\n\n// components\nimport Title from '../../components/Title';\nimport Card from '../../components/Card';\n\n// hooks\nimport { useAppSelector } from '../../redux/hooks';\n\nconst BookmarksSection: React.FC = (): React.ReactElement => {\n  const bookmarks = useAppSelector((state) => state.bookmarks.data);\n\n  return (\n    <section className='bookmarks-section'>\n      <div className='container'>\n        <Title text='Bookmarks' />\n        {bookmarks.length !== 0 ? (\n          <div className='row'>\n            {bookmarks.map((bookmark) => (\n              <Card\n                key={bookmark.id}\n                id={bookmark.id}\n                src={bookmark.imgUrl}\n                alt={bookmark.title}\n                title={bookmark.title}\n                tags={bookmark.tags || 'No tags provided'}\n              />\n            ))}\n          </div>\n        ) : (\n          <p className='alert'>There is no bookmarks yet.</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default BookmarksSection;\n","import React from 'react';\n\n// modules\nimport Header from '../../modules/Header';\nimport BookmarksSection from '../../modules/BookmarksSection';\nimport Footer from '../../modules/Footer';\n\nconst BookmarksPage: React.FC = (): React.ReactElement => {\n  return (\n    <>\n      <Header />\n      <BookmarksSection />\n      <Footer />\n    </>\n  );\n};\n\nexport default BookmarksPage;\n","const getBaseApi = (src: string, isEncoded: boolean): string => {\n  if (src === 'localhost') {\n    return isEncoded\n      ? 'http%3A%2F%2Flocalhost%3A3000%2Fsignin'\n      : 'http://localhost:3000/signin';\n  } else {\n    return isEncoded\n      ? 'https%3A%2F%2Farmistrice.github.io%2Fsignin'\n      : 'https://armistrice.github.io/signin';\n  }\n};\n\nexport default getBaseApi;\n","import getBaseApi from './getBaseApi';\n\nexport const CLIENT_ID: string = '60ec694880f11a82952b1cb4';\nexport const CLIENT_SECRET: string = '963d4d0a-4e97-4f41-9624-198698353c6b';\nexport const GRANT_TYPE: string = 'authorization_code';\n\nexport const RAINDROP_BASE_API: string = `https://api.raindrop.io/v1/oauth/authorize?client_id=${CLIENT_ID}&redirect_uri=${getBaseApi(\n  'github',\n  true\n)}`;\nexport const RAINDROP_ACCESS_API: string =\n  'https://raindrop.io/oauth/access_token';\n","import React, { useEffect } from 'react';\n\n// components\nimport { useLocation } from 'react-router-dom';\nimport Title from '../../components/Title';\n\n// api\nimport http from '../../api/http';\nimport {\n  CLIENT_ID,\n  CLIENT_SECRET,\n  RAINDROP_BASE_API,\n} from '../../api/raindropApi';\nimport getBaseApi from '../../api/getBaseApi';\n\n// styles\nimport './SignInSection.styles.scss';\n\nconst SignInSection: React.FC = (): React.ReactElement => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.search) {\n      const code: string = location.search.slice(6);\n\n      http({\n        method: 'post',\n        url: RAINDROP_BASE_API,\n        data: {\n          code,\n          client_id: CLIENT_ID,\n          redirect_uri: getBaseApi('github', false),\n          client_secret: CLIENT_SECRET,\n          grant_type: 'authorization_code',\n        },\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n    }\n  }, []);\n\n  return (\n    <section className='signin-section'>\n      <div className='container'>\n        <Title text='Sign in' />\n        <a className='signin-section__btn button' href={RAINDROP_BASE_API}>\n          Sign in via RainDrop.io\n        </a>\n      </div>\n    </section>\n  );\n};\n\nexport default SignInSection;\n","import React from 'react';\n\n// modules\nimport Header from '../../modules/Header';\nimport Footer from '../../modules/Footer';\nimport SignInSection from '../../modules/SignInSection';\n\nconst SignInPage: React.FC = (): React.ReactElement => {\n  return (\n    <>\n      <Header />\n      <SignInSection />\n      <Footer />\n    </>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\n\n// routing\nimport { Switch, Route } from 'react-router-dom';\n\n// pages\nimport MainPage from '../pages/MainPage';\nimport BookmarksPage from '../pages/BookmarksPage';\nimport SignInPage from '../pages/SignInPage';\n\nconst AppRouter: React.FC = (): React.ReactElement => {\n  return (\n    <Switch>\n      <Route exact path='/' component={MainPage} />\n      <Route path='/bookmarks' component={BookmarksPage} />\n      <Route path='/signin' component={SignInPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './routing/AppRouter';\n\nconst App: React.FC = (): React.ReactElement => {\n  return <AppRouter />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// persist\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// routing\nimport { BrowserRouter } from 'react-router-dom';\n\n// store\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\n// components\nimport App from './App';\n\n// styles\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}